{"ast":null,"code":"import _classCallCheck from\"/home/matt/dev/react-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/matt/dev/react-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var TURN_ALIVE=[3];var STAY_ALIVE=[2,3];var LifeGrid=/*#__PURE__*/function(){function LifeGrid(xSize,ySize){_classCallCheck(this,LifeGrid);this.xSize=xSize;this.ySize=ySize;var grids=this.generateGrids(xSize,ySize);this.lifeGrid=grids.lifeGrid;this.tempGrid=grids.tempGrid;}_createClass(LifeGrid,[{key:\"generateGrids\",value:function generateGrids(xSize,ySize){var lifeGrid=[];var tempGrid=[];for(var x=0;x<xSize;x++){lifeGrid[x]=[];tempGrid[x]=[];for(var y=0;y<ySize;y++){lifeGrid[x][y]=new Cell();tempGrid[x][y]=new Cell();}}return{lifeGrid:lifeGrid,tempGrid:tempGrid};}},{key:\"grid\",get:function get(){return this.lifeGrid;}},{key:\"setCell\",value:function setCell(x,y,isAlive){if(x>=0&&x<this.xSize&&y>=0&&y<this.ySize){this.lifeGrid[x][y].isAlive=isAlive;}else{throw'Attempted to set a nonexistant cell';}}},{key:\"iterate\",value:function iterate(){for(var x=0;x<this.xSize;x++){for(var y=0;y<this.Size;y++){this.applyRulesToCell(x,y);}}this.applyTempGridToLifeGrid();}},{key:\"applyRulesToCell\",value:function applyRulesToCell(x,y){var cell=this.lifeGrid[x][y];var numberOfLivingNeighbors=this.getNumberOfLivingNeighbors(x,y);if(cell.isAlive){this.tempGrid[x][y].isAlive=STAY_ALIVE.includes(numberOfLivingNeighbors);}else{this.tempGrid[x][y].isAlive=TURN_ALIVE.includes(numberOfLivingNeighbors);}}},{key:\"getNumberOfLivingNeighbors\",value:function getNumberOfLivingNeighbors(x,y){var _this$lifeGrid,_this$lifeGrid2,_this$lifeGrid3,_this$lifeGrid$x,_this$lifeGrid$x2,_this$lifeGrid4,_this$lifeGrid5,_this$lifeGrid6;var neighborCells=[(_this$lifeGrid=this.lifeGrid[x-1])===null||_this$lifeGrid===void 0?void 0:_this$lifeGrid[y-1],(_this$lifeGrid2=this.lifeGrid[x-1])===null||_this$lifeGrid2===void 0?void 0:_this$lifeGrid2[y],(_this$lifeGrid3=this.lifeGrid[x-1])===null||_this$lifeGrid3===void 0?void 0:_this$lifeGrid3[y+1],(_this$lifeGrid$x=this.lifeGrid[x])===null||_this$lifeGrid$x===void 0?void 0:_this$lifeGrid$x[y-1],(_this$lifeGrid$x2=this.lifeGrid[x])===null||_this$lifeGrid$x2===void 0?void 0:_this$lifeGrid$x2[y+1],(_this$lifeGrid4=this.lifeGrid[x+1])===null||_this$lifeGrid4===void 0?void 0:_this$lifeGrid4[y-1],(_this$lifeGrid5=this.lifeGrid[x+1])===null||_this$lifeGrid5===void 0?void 0:_this$lifeGrid5[y],(_this$lifeGrid6=this.lifeGrid[x+1])===null||_this$lifeGrid6===void 0?void 0:_this$lifeGrid6[y+1]].filter(function(c){return c!==undefined;});var livingNeighbors=neighborCells.filter(function(c){return c.isAlive;});return livingNeighbors.length;}},{key:\"applyTempGridToLifeGrid\",value:function applyTempGridToLifeGrid(){for(var x=0;x<this.xSize;x++){for(var y=0;y<this.ySize;y++){this.lifeGrid[x][y].isAlive=this.tempGrid[x][y].isAlive;}}}}]);return LifeGrid;}();export{LifeGrid as default};var Cell=function Cell(){var isAlive=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;_classCallCheck(this,Cell);this.isAlive=isAlive;};","map":{"version":3,"sources":["/home/matt/dev/react-test/src/js/models/lifeGrid.js"],"names":["TURN_ALIVE","STAY_ALIVE","LifeGrid","xSize","ySize","grids","generateGrids","lifeGrid","tempGrid","x","y","Cell","isAlive","Size","applyRulesToCell","applyTempGridToLifeGrid","cell","numberOfLivingNeighbors","getNumberOfLivingNeighbors","includes","neighborCells","filter","c","undefined","livingNeighbors","length"],"mappings":"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","sourcesContent":["const TURN_ALIVE = [3]\nconst STAY_ALIVE = [2,3]\n\nexport default class LifeGrid {\n  constructor(xSize, ySize) {\n    this.xSize = xSize\n    this.ySize = ySize\n\n    const grids = this.generateGrids(xSize, ySize)\n    this.lifeGrid = grids.lifeGrid\n    this.tempGrid = grids.tempGrid\n  }\n\n  generateGrids(xSize, ySize) {\n    const lifeGrid = []\n    const tempGrid = []\n\n    for (let x=0; x<xSize; x++) {\n      lifeGrid[x] = []\n      tempGrid[x] = []\n\n      for (let y=0; y<ySize; y++) {\n        lifeGrid[x][y] = new Cell()\n        tempGrid[x][y] = new Cell()\n      }\n    }\n\n    return {\n      lifeGrid,\n      tempGrid,\n    }\n  }\n\n  get grid() {\n    return this.lifeGrid\n  }\n\n  setCell(x, y, isAlive) {\n    if (x >= 0 && x < this.xSize && y >= 0 && y < this.ySize) {\n      this.lifeGrid[x][y].isAlive = isAlive\n    } else {\n      throw('Attempted to set a nonexistant cell')\n    }\n  }\n\n  iterate() {\n    for (let x=0; x<this.xSize; x++) {\n      for (let y=0; y<this.Size; y++) {\n        this.applyRulesToCell(x,y)\n      }\n    }\n\n    this.applyTempGridToLifeGrid()\n  }\n\n  applyRulesToCell(x,y) {\n    const cell = this.lifeGrid[x][y]\n    const numberOfLivingNeighbors = this.getNumberOfLivingNeighbors(x, y)\n\n    if (cell.isAlive) {\n      this.tempGrid[x][y].isAlive = STAY_ALIVE.includes(numberOfLivingNeighbors)\n    } else {\n      this.tempGrid[x][y].isAlive = TURN_ALIVE.includes(numberOfLivingNeighbors)\n    }\n  }\n\n  getNumberOfLivingNeighbors(x, y) {\n    const neighborCells = [\n      this.lifeGrid[x-1]?.[y-1],\n        this.lifeGrid[x-1]?.[y],\n        this.lifeGrid[x-1]?.[y+1],\n        this.lifeGrid[x]?.  [y-1],\n        this.lifeGrid[x]?.  [y+1],\n        this.lifeGrid[x+1]?.[y-1],\n        this.lifeGrid[x+1]?.[y],\n        this.lifeGrid[x+1]?.[y+1],\n    ].filter( c => c !== undefined )\n    const livingNeighbors = neighborCells.filter( (c) => c.isAlive )\n\n    return livingNeighbors.length\n  }\n\n  applyTempGridToLifeGrid() {\n    for (let x=0; x<this.xSize; x++) {\n      for (let y=0; y<this.ySize; y++) {\n        this.lifeGrid[x][y].isAlive = this.tempGrid[x][y].isAlive\n      }\n    }\n  }\n}\n\nclass Cell {\n  constructor(isAlive = false) {\n    this.isAlive = isAlive\n  }\n}\n"]},"metadata":{},"sourceType":"module"}